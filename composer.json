{
  "name": "marjovanlier/southafricanidvalidator",
  "description": "A sophisticated PHP package designed to validate South African ID numbers by checking both structural and contextual rules",
  "keywords": [
    "Marjo van Lier",
    "South African ID validator"
  ],
  "homepage": "https://github.com/marjovanlier/southafricanidvalidator",
  "license": "MIT",
  "type": "library",
  "authors": [
    {
      "name": "Marjo Wenzel van Lier",
      "email": "marjo.vanlier@gmail.com",
      "role": "Developer"
    }
  ],
  "autoload": {
    "psr-4": {
      "MarjovanLier\\SouthAfricanIDValidator\\": "src"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "MarjovanLier\\SouthAfricanIDValidator\\Tests\\": "tests"
    }
  },
  "config": {
    "preferred-install": {
      "*": "dist"
    },
    "optimize-autoloader": true,
    "classmap-authoritative": true,
    "sort-packages": true,
    "allow-plugins": {
      "infection/extension-installer": true,
      "phpstan/extension-installer": true
    }
  },
  "minimum-stability": "stable",
  "require": {
    "php": "^8.2",
    "marjovanlier/stringmanipulation": "^1.0.35"
  },
  "require-dev": {
    "enlightn/security-checker": "^2.0",
    "infection/infection": "^0.27.9",
    "laravel/pint": "^1.13.10",
    "phan/phan": "^5.4.3",
    "php-parallel-lint/php-parallel-lint": "^1.3.2",
    "phpmd/phpmd": "^2.15",
    "phpstan/extension-installer": "^1.3.1",
    "phpstan/phpstan": "^1.10.57",
    "phpstan/phpstan-strict-rules": "^1.5.2",
    "phpunit/phpunit": "^10.5.10",
    "psalm/plugin-phpunit": "^0.18.4",
    "rector/rector": "^0.19.6",
    "roave/no-floaters": "^1.11",
    "roave/security-advisories": "dev-latest",
    "vimeo/psalm": "^5.21.1"
  },
  "scripts-descriptions": {
    "test:code-style": "Run code style checks",
    "test:composer-validate": "Validate composer.json",
    "test:infection": "Run mutation tests",
    "test:lint": "Run lint checks",
    "test:phan": "Run static analysis",
    "test:phpmd": "Run static analysis",
    "test:phpstan": "Run static analysis",
    "test:phpunit": "Run unit tests",
    "test:psalm": "Run static analysis",
    "test:rector": "Run static analysis",
    "test:vulnerabilities-check": "Check for vulnerabilities"
  },
  "scripts": {
    "post-update-cmd": [
      "composer validate --strict",
      "php -d memory_limit=-1 ./vendor/bin/security-checker security:check",
      "composer outdated -D"
    ],
    "tests": [
      "@test:composer-validate",
      "@test:vulnerabilities-check",
      "@test:lint",
      "@test:code-style",
      "@test:phpmd",
      "@test:phpunit",
      "@test:infection",
      "@test:phpstan",
      "@test:phan",
      "@test:psalm",
      "@test:rector"
    ],
    "test:code-style": "php -d memory_limit=-1 ./vendor/bin/pint --test",
    "test:composer-validate": "composer validate --strict",
    "test:infection": "php -d memory_limit=-1 -d zend_extension=xdebug -d xdebug.mode=coverage ./vendor/bin/infection --threads=4 --show-mutations",
    "test:lint": "php -d memory_limit=-1 ./vendor/bin/parallel-lint --exclude vendor --show-deprecated .",
    "test:phan": "php -d memory_limit=-1 ./vendor/bin/phan --allow-polyfill-parser --no-progress-bar",
    "test:phpmd": "php -d memory_limit=-1 ./vendor/bin/phpmd src,tests text phpmd.xml",
    "test:phpstan": "php -d memory_limit=-1 ./vendor/bin/phpstan analyse --no-progress --no-interaction",
    "test:phpunit": "php -d memory_limit=-1 ./vendor/bin/phpunit --no-coverage --no-logging",
    "test:psalm": "php -d memory_limit=-1 ./vendor/bin/psalm --no-cache --no-progress --show-info=false",
    "test:rector": "php -d memory_limit=-1 ./vendor/bin/rector --dry-run",
    "test:vulnerabilities-check": "php -d memory_limit=-1 ./vendor/bin/security-checker security:check"
  }
}
